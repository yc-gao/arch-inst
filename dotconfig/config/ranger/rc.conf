set hidden_filter ^\.|\.(?:pyc|pyo|bak|swp)$|^lost\+found$|^__(py)?cache__$
set show_hidden false

set confirm_on_delete never

set open_all_images false

set vcs_aware true
set vcs_backend_git enabled
set vcs_backend_hg disabled
set vcs_backend_bzr disabled
set vcs_backend_svn disabled
set vcs_msg_length 50

set preview_files true
set preview_directories true
set collapse_preview true

set preview_images true
set preview_images_method ueberzug

set use_preview_script true
set preview_script ~/.config/ranger/scope.sh

# ===================================================================
# == Command Aliases in the Console
# ===================================================================

# move
map k       move up=1
map j       move down=1
map h       move left=1
map l       move right=1
map gg      move to=0
map G       move to=-1
map J       move down=0.4  pages=True
map K       move up=0.4    pages=True

map ]       move_parent 1
map [       move_parent -1

map gh      cd ~
map gw      cd ~/Workdir
map gt      cd ~/Tmp
map gT      cd /tmp
map ge      cd /etc
map gm      cd /mnt
map gd      cd /dev

# view
map /       console filter%space
map i       set show_hidden!

map or      set sort_reverse!
map om      chain set sort=mtime;       set sort_reverse=False
map oc      chain set sort=ctime;       set sort_reverse=False
map oa      chain set sort=atime;       set sort_reverse=False
map ot      chain set sort=type;        set sort_reverse=False
map on      chain set sort=natural;     set sort_reverse=False
map os      chain set sort=size;     set sort_reverse=False

map oM      chain set sort=mtime;       set sort_reverse=True
map oC      chain set sort=ctime;       set sort_reverse=True
map oA      chain set sort=atime;       set sort_reverse=True
map oT      chain set sort=type;        set sort_reverse=True
map oN      chain set sort=natural;     set sort_reverse=True
map oS      chain set sort=size;     set sort_reverse=True

# tab
eval for arg in range(1, 10): cmd("map <a-{0}>   tab_open {0}".format(arg))
map <a-0>   tab_open 10


# file operation
map r       rename_append
map a       console touch%space

map yy      copy
map uy      copy mode=remove
map dd      cut
map ud      cut mode=remove
map pp      paste
map de      delete
map yp      yank path
map yn      yank name

map v       mark_files all=True toggle=True
map uv      mark_files all=True val=False
map <space> mark_files toggle=True
map V       toggle_visual_mode
map uV      toggle_visual_mode reverse=True

map =       console shell chmod%space
eval for arg in "rwxXst": cmd("map +u{0}     shell -f chmod u+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +g{0}     shell -f chmod g+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +o{0}     shell -f chmod o+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +{0}      shell -f chmod a+{0} %s".format(arg))

eval for arg in "rwxXst": cmd("map -u{0}     shell -f chmod u-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -g{0}     shell -f chmod g-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -o{0}     shell -f chmod o-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -{0}      shell -f chmod a-{0} %s".format(arg))

# misc
map <C-d> shell ripdrag %p -x 2>/dev/null &

map e       edit
map s       terminal

